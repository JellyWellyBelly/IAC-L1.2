;==============================================;
;									           ;
;	AUTORES: GONcALO ALVES, 84720	 GRUPO 38  ;
;			 MIGUEL VIEGAS, 84747	 		   ;
;									           ;
;==============================================;

       ;=====================;
	   ;	  CONSTANTES	 ;
	   ;=====================;
		

TECLADO07 			 EQU  8006H ; ENDEREcO DO TECLADO DAS TELCAS 0 A 7
TECLADO89			 EQU  8008H ; ENDEREcO DO TECLADO DAS TECLAS 8 A 9
LCD_CIMA			 EQU  8000H	; ENDEREcO DO LCD DE CIMA
LCD_BAIXO			 EQU  8002H	; ENDERECO DE LCD DE BAIXO 
BARRAS_DE_VELOCIDADE EQU  8004H	; ENDERECO DOS SLIDERS 
BOTOES_PRESSAO	     EQU  800CH	; ENDEREcO DOS BOTÕES DE PRESSÃO		
SEMAFOROS 	  	     EQU  8012H	; ENDEREcO DOS SEMÁFOROS
PASSAGEM_NIVEL		 EQU  8014H	; ENDEREcO DOS SEMAFOROS DE PASSAGEM DE NIVEL
AGULHAS				 EQU  8016H ; ENDEREcO DAS AGULHAS	
SELECAO	         	 EQU  8018H	; ENDEREcO DO PORTO DE SELEcÃO DE COMBOIO E COMANDO		
COMANDO		    	 EQU  801AH	; ENDEREcO DO PORTO ONDE DAR COMANDOS PARA OS COMBOIOS		
SENSOR_EVENTOS	     EQU  801CH	; ENDEREcO DO PORTO DOS SENSORES (NÚMERO DE EVENTOS)		
SENSOR_INFO	     	 EQU  801EH	; ENDEREcO DO PORTO DOS SENSORES (INFORMAcÃO)

SEM_VERDE            EQU  2 ; COR DOS SEMÁFOROS (VERDE)
SEM_VERMELHO         EQU  1 ; COR DOS SEMÁFOROS (VERMELHO)
SEM_CINZENTO         EQU  0 ; COR DOS SEMÁFOROS (CINZENTO)

ESQUERDA		 	 EQU  1	;DIREcAO DAS AGULHAS (ESQUERDA)
DIREITA 			 EQU  2	;DIREcÃO DAS AGULHAS (DIREITA)

MC_0 EQU 0				;ESTADO DA MUDANCA DE COR (DESATIVADO)
MC_1 EQU 1				;ESTADO DA UDANCA DE COR (ATIVADO)

PN_ZERO	EQU	0			;ESTADO DAS PASSAGENS DE NIVEL A 0
PN_UM EQU 1				;ESTADO DAS PASSAGENS DE NIVEL A 1

SENSOR8 EQU 8			;No DO SENSOR 8
SENSOR9 EQU 9			;No DO SENSOR 9

SEM_8	EQU 8			;No DO SEMAFORO 8
SEM_9	EQU 9			;No DO SEMAFORO 9

DESOCUPADO	EQU 0		;ESTADO DO TROCO (DESOCUPADO)
OCUPADO	EQU 1			;ESTADO DO TROCO (OCUPADO)

TROCO_DEFAULT	EQU 0
SLIDER_DEFAULT	EQU 0

ESTADO_ROT0_1	EQU 1	;ESTADO PERMISSAO DA ACTUALIZACAO DOS TROCOS
ESTADO_ROT0_0	EQU 0	

COMBOIO_0	EQU 0
COMBOIO_1	EQU 1

EST_BP EQU 0

TRUE EQU 1
FALSE EQU 0

ZERO			EQU	 0000H
UM				EQU	 0001H
DOIS			EQU	 0002H
TRES			EQU	 0003H
QUATRO			EQU	 0004H
DEZ	    		EQU	 0010H
TREZE			EQU	 0013H
TRINTA			EQU	 0030H
OITENTA	    	EQU	 0080H




				;======================;
				;        DADOS         ;
				;======================;


PLACE     2000H

PILHA:		TABLE 100H		; ESPAcO RESERVADO PARA A PILHA (200H BYTES, POIS SÃO 100H WORDS)
SP_INICIAL:				     ; ESTE É O ENDEREcO (1200H) COM QUE O SP DEVE SER INICIALIZADO.
                                   ; O 1o END. DE RETORNO SERÁ ARMAZENADO EM 11FEH (1200H-2)
	
	
TABELA_INTERRUPCOES:
     WORD    ROT0                ; ROTINA DE TRATAMENTO DA INTERRUPcÃO 0
	 WORD	 ROT1				 ; ROTINA DE TRATAMENTO DA INTERRUPcAO 1
 
 
		    ;=====================;
			;	   VARIAVEIS      ;
			;=====================;
			
HA_ACT:
 
	WORD    FALSE
 
TROCO_C0:	;INDICA O TROCO ATUAL DO COMBOIO 0

	WORD	TROCO_DEFAULT
	
TROCO_C1:	;INDICA O TROCO ATUAL DO COMBOIO 1

	WORD	TROCO_DEFAULT
		
ESTADO_PASSAGEM_NV:	;ESTADO DOS SEMAFOROS DA PASSAGEM DE NV

	WORD PN_ZERO
	
MUDA_COR:	;PERMITE A MUDANCA DE COR

	WORD	MC_0
	
ESTADO_BOTOES_PRESSAO:	;INDICA O ESTADO DOS BOTOES DE PRESSAO

	WORD	EST_BP
	
E_CINZA: 	;VARIAVEL QUE INDICA SE OS SEMAFOROS DA PASSAGEM DE NIVEL SAO OS DOIS CINZENTOS OU NAO

	WORD 	TRUE
	
AGULHAS_ESTADOS:	;TABELA COM AS DIRECOES DAS AGULHAS

	STRING	DIREITA	;AGULHA 0
	STRING	DIREITA	;AGULHA 1
	STRING	DIREITA	;AGULHA 2
	STRING	DIREITA	;AGULHA 3	
	
CORES_SEMAFOROS:                  ; TABELA PARA AS CORES DOS SEMÁFOROS (VERDE, CINZENTO OU VERMELHO).
                                  ; POR OMISSÃO, TODOS OS SEMÁFOROS SÃO MOSTRADOS INICIALMENTE A VERDE
     STRING   SEM_VERDE           ; COR DO SEMÁFORO 0
     STRING   SEM_VERDE           ; COR DO SEMÁFORO 1
     STRING   SEM_VERDE           ; COR DO SEMÁFORO 2
     STRING   SEM_VERDE           ; COR DO SEMÁFORO 3
     STRING   SEM_VERDE           ; COR DO SEMÁFORO 4
     STRING   SEM_VERDE           ; COR DO SEMÁFORO 5
     STRING   SEM_VERDE           ; COR DO SEMÁFORO 6
     STRING   SEM_VERDE           ; COR DO SEMÁFORO 7
     STRING   SEM_VERDE           ; COR DO SEMÁFORO 8
     STRING	  SEM_VERDE           ; COR DO SEMÁFORO 9
	 
TROCOS:

	 STRING	DESOCUPADO	;TROCO 0
	 STRING	DESOCUPADO	;TROCO 1
	 STRING	DESOCUPADO	;TROCO 2
	 STRING	DESOCUPADO	;TROCO 3
	 STRING	DESOCUPADO	;TROCO 4
	 STRING	DESOCUPADO	;TROCO 5
	 STRING	DESOCUPADO	;TROCO 6
	 STRING	DESOCUPADO	;TROCO 7
	 
	 
	 
		;====================================;
		;			    CODIGO				 ;
		;====================================;

PLACE		0000H
INICIO:

     MOV	SP, SP_INICIAL         ; INICIALIZA SP PARA A PALAVRA A SEGUIR À ÚLTIMA DA PILHA
     MOV 	BTE, TABELA_INTERRUPCOES ; TABELA DAS ROTINAS DE INTERRUPcÃO
	 MOV	R0, 2	               ; INTERRUPcÃO 0 SENSÍVEL AO NÍVEL 1 (E NÃO AO FLANCO), POIS O COMBOIO
	 MOV	RCN, R0                ; MANTÉM O PINO DE INTERRUPcÃO ATIVADO ENQUANTO HOUVER EVENTOS
                                   ;(QUE PODEM SER QUASE SIMULTÂNEOS NO CASO DE HAVER MAIS DO QUE UM COMBOIO)

								   
COMEcA_COMBOIO_0:				   ; ARRANCA O COMBOIO 0
						   
     MOV  	R0, 0                  ; NÚMERO DO COMBOIO 0
     MOV	R9, SELECAO
     SHL  	R0, 4                  ; No DO COMBOIO: BITS 7 A 4
	 MOVB	[R9], R0			   ; O PRÓXIMO COMANDO VAI ALTERAR A VELOCIDADE DO COMBOIO INDICADO POR R0
	 MOV	R9, COMANDO
     MOV  	R1, 3                  ; SENTIDO PARA A FRENTE, VELOCIDADE MÁXIMA (3)
	 MOVB	[R9], R1               ; PÕE COMBOIO A ANDAR								   
								   
COMEcA_COMBOIO_1:				   ; ARRANCA O COMBOIO 1
						   
     MOV  	R0, 1                  ; NÚMERO DO COMBOIO 1
     MOV	R9, SELECAO
     SHL  	R0, 4                  ; No DO COMBOIO: BITS 7 A 4
	 MOVB	[R9], R0			   ; O PRÓXIMO COMANDO VAI ALTERAR A VELOCIDADE DO COMBOIO INDICADO POR R0
	 MOV	R9, COMANDO
     MOV  	R1, 3                  ; SENTIDO PARA A FRENTE, VELOCIDADE MÁXIMA (3)
	 MOVB	[R9], R1               ; PÕE COMBOIO A ANDAR								   
								   
PASSAGEM_DE_NIVEL_CINZA:		   ;INICIALIZA OS SEMAFOROS DA PASSAGEM DE NIVEL A CINZA

	MOV R2, SEMAFOROS			   ;ENDEREcO DO PORTO DOS SEMAFOROS
	MOV R3, SEM_CINZENTO		   ;COR CINZENTA
	MOV R8, 8					   ;NoS DOS SEMAFOROS
	MOV R9, 9
	
	SHL R8, 2					   ;COLOCA O No DO SEMAFORO NOS BITS 7 A 2
	ADD R8, R3					   ;POE A COR NOS BITS 0 E 1
	MOV [R2], R8				   ;ACTUALIZA SEMAFORO
	
	SHL R9, 2					   
	ADD R9, R3					   
	MOV [R2], R8	
	
		;===================================;
		;		    CICLO_PRINCIPAL			;
		;===================================;

CICLO_PRINCIPAL:

	EI
	EI0
	EI1
	CALL AGULHAS_ROT		; MUDA A POSIcAO DAS AGULHAS
	CALL SENSORES			; TESTA E APLICA PASSAGENS NOS SENSORES
	DI
	CALL ACT_VAR_TROCOS		; ACTUALIZA AS VARIAVEIS QUE CONTROLAM OS TROCOS
	
	JMP CICLO_PRINCIPAL
	
	
	
	
	
	
	
;==================== AGULHAS =================================
; ARGUMENTOS: R1 ENDEREcO DE MEMÓRIA DAS AGULHAS
;			  R3 ENDEREcO DO ESTADO DAS AGULHAS
; RETORNA: NADA
; DESCRIcÃO: VERIFICA SE ALGUMA TECLA DOS BOTOES DE PRESSAO
;			 0-3 FOI PRESSIONADA E MUDA A AGULHA CORRESPONDENTE
;==============================================================
	
AGULHAS_ROT:

	PUSH R1
	PUSH R2
	PUSH R3
	PUSH R4

	MOV R1, BOTOES_PRESSAO 		  ;ENDEREcO DOS BOTOES DE PRESSAO
	MOVB R2, [R1]  				  ;OBTEM VALOR DOS BOTOES
	MOV R3, ESTADO_BOTOES_PRESSAO ;ENDEREcO DOS ESTADO DOS BOTOES DE PRESSAO
	MOV R4, [R3]				  ;OBTEM VALOR DO ESTADO DOS BOTOES DE PRESSAO
	
	CMP R2, R4
	JZ BOT_PRESS_FIM			  ;SE O ESTADO ANTERIOR FOR IGUAL AO ACTUAL TERMINA A ROTINA
	
	CMP R4, 0					  ;TESTA SE ESTÁ NO FLANCO DESCENDENTE
	JZ	BOT_PRESS_FIM
	
BOT_PRESS_PREMIDO:
	MOV R1, 0	                  ;CONTADOR INICIALIZADO A 0
	CALL NUM_BOTAO	  			  ;OBTEM NUMERO DO BOTAO
	CALL MUDA_AGULHA  			  ;MUDA POSICAO DA AGULHA

BOT_PRESS_FIM:

	MOV R1, BOTOES_PRESSAO	      ;GARANTE QUE OS VALORES SEJAM OS PRETENDIDOS
	MOV R3, ESTADO_BOTOES_PRESSAO
	MOVB R2, [R1]		          ;ACTUALIZA O ESTADO DO TECLADO
	MOV [R3], R2
	
	POP R4
	POP R3
	POP R2
	POP R1
	
	RET	
	
		
	
	
	
	
	
	
	
;================= MUDA_AGULHA ======================
; ARGUMENTOS: R6 NÚMERO DA AGULHA, SOMADO Á BASE PARA
;				ATUALIZAR DIREcAO
; RETORNA: NADA
; DESCRIcAO: MUDA A DIRECAO DA AGULHA
;====================================================




MUDA_AGULHA:

	PUSH R2
    CALL OBTEM_DIR_AGULHA        ; OBTÉM DIRECAO DA AGULHA (EM R2)
	
    CMP  R2, ESQUERDA
    JZ   POE_DIREITA             ; SE A AGULHA ESTÁ PARA A ESQUERDA, PÕE A DIREITA, CASO CONTRÁRIO MUDA PARA A ESQUERDA
	 
POE_ESQUERDA:

    MOV  R2, ESQUERDA            ; DIRECAO DA AGULHA VAI FICAR ESQUERDA
    JMP  ATUALIZA_DIRECAO   	 

POE_DIREITA:	
    MOV  R2, DIREITA        	 ; DIRECAO DA AGULHA VAI FICAR DIREITA

ATUALIZA_DIRECAO:
    CALL ACT_DIRECAO_AGULHA    	 ; ATUALIZA DIRECAO DA AGULHA NA TABELA E NA INTERFACE.
                                 ; R1 AINDA TEM O NÚMERO DO SEMÁFORO E R2 TEM A NOVA DIRECAO							  
    POP R2
	RET
   
   
OBTEM_DIR_AGULHA:

    PUSH R3                      ; GUARDA VALOR DO REGISTO NA PILHA
    MOV  R3, AGULHAS_ESTADOS	 ; ENDEREcO DA TABELA DAS DIRECOES DAS AGULHAS
    ADD  R3, R6                  ; OBTÉM ENDEREcO DO AGULHA CORRESPONDENTE (SOMA O NÚMERO DA AGULHA À BASE DA TABELA)
    MOVB R2, [R3]                ; LÊ A DIRECAO DA AGULHA
    POP  R3		                 ; REPÕE O VALOR ANTERIOR DO REGISTO A PARTIR DA CÓPIA GUARDADA NA PILHA
	RET							 
	
 
ACT_DIRECAO_AGULHA:
    PUSH R4                      ; GUARDA VALORES DOS REGISTOS NA PILHA
    PUSH R3
    PUSH R5
	
    MOV  R3, AGULHAS_ESTADOS     ; ENDEREcO DA TABELA DAS DIRECOES
    ADD  R3, R6                  ; OBTÉM ENDEREcO DO BYTE DA DIRECAO DA AGULHA (SOMA O NÚMERO DA AGULHA À BASE DA TABELA)
	MOVB	[R3], R2             ; ATUALIZA A DIRECAO NA TABELA DAS AGULHAS

	SHL  R4, 2                   ; FORMATO DO PORTO DAS AGULHAS (NÚMERO DA AGULHA TEM DE ESTAR NOS BITS 7 A 2, COR NOS BITS 1 E 0)
    ADD  R4, R2                  ; JUNTA DIRECAO (QUE FICA NOS BITS 1 E 0)
    MOV  R5, AGULHAS		     ; ENDEREcO DO PORTO DOS BOTOES DE PRESSAO
    MOVB [R5], R4                ; ATUALIZA DIRECAO PROPRIAMENTE DITO
	
    POP R5                       ; REPÕE OS VALORES ANTERIORES DOS REGISTOS A PARTIR DAS CÓPIAS GUARDADAS NA PILHA
    POP R3
    POP R4
	RET
	
		
	
	
	
	
	
	
	
	
	
	
	
;======================== SENSORES ==========================
; ARGUMENTOS: R9 ENDEREcO DE MEMORIA DOS SENSORES
;			  R2 NÚMERO DO SENSOR
;			  R1 NÚMERO DO COMBOIO 
;				 QUE PASSOU NO SENSOR
; RETORNA: - NÚMERO DO SENSOR NO LCD CORRESPONDENTE AO COMBOIO
;		   - CORES DAS PASSAGENS DE NIVEL
; DESCRIcÃO: - QUANDO UM COMBOIO ATIVA UM SENSOR, É ESCRITO NO
;			     LCD DE CIMA O No DO SENSOR.
;			 - CONTROLA A TROCA DE CORES DURANTE A PASSAGEM
;			     DE NIVEL
;============================================================

			  
SENSORES:

     PUSH 	R1
     PUSH 	R2
	 PUSH 	R3
	 PUSH   R6
	 PUSH   R7
     PUSH 	R9

	 
ESPERA_EVENTOS:
	
	MOV		R9, SENSOR_EVENTOS
	MOVB	R1, [R9]		        	; NUMERO DE EVENTOS DE SENSORES OCORRIDOS
	CMP		R1, 0						; TESTA SE HA EVENTOS 
	JZ		FIM_SENSORES				; NAO HA EVENTOS - VOLTA AO CICLO PRINCIPAL 

	
HOUVE_EVENTO:
	
	MOV		R9, SENSOR_INFO				; PORTO DOS SENSORES (INFORMACAO)
	MOVB	R1, [R9]		        	; LE 1O BYTE (INFORMACAO SOBRE O COMBOIO QUE PASSOU)
	MOVB	R2, [R9]		        	; LE 2O BYTE (NÚMERO DO SENSOR)
	MOV     R6, R1						; COPIA DO NUMERO DO COMBOIO PARA SER USADO COMO ARGUMENTO EM SUBROTINAS DOS SENSORES
	MOV 	R7, R2						; COPIA DO NUMERO DO SENSOR PARA SE USAR COMO ARGUMENTO EM SUBROTINAS DOS SENSORES
	CMP 	R1, 1						; NAO ESCREVE A PASSAGEM DO TOPO TRASEIRO DO COMBOIO 0 
	JZ		FIM_SENSORES
	CMP 	R1, 3						; NAO ESCREVE A PASSAGEM DO TOPO TRASEIRO DO COMBOIO 1 
	JZ		FIM_SENSORES
	MOV		R3, R1						; DA A R3 O VALOR DE R1
	BIT		R3, 1						; DEVOLVE 0 CASO SEJA O COMBOIO 0 E 1 CASO SEJA O COMBOIO 1
	JZ		ESCREVE_NUMERO_SENSOR_COMBOIO_0 


	
ESCREVE_NUMERO_SENSOR_COMBOIO_1:

	CALL SENSOR_8 
		
    MOV  	R1, 30H                  	; '0'
    ADD  	R2, R1                		; CONVERTE NÚMERO DO SENSOR (0 A 9) PARA CARACTER NUMÉRICO ('0' A '9')
	MOV		R9, LCD_BAIXO		     	; PORTO DA LINHA DE BAIXO DO LCD
    MOVB 	[R9], R2               		; ESCREVE NÚMERO DO SENSOR NO LCD DE BAIXO
	JMP 	FIM_SENSORES

	
ESCREVE_NUMERO_SENSOR_COMBOIO_0:
	
	CALL SENSOR_8
	
	MOV 	R1, 30H						; '0'
	ADD 	R2, R1						; CONVERTE NÚMERO DO SENSOR (0 A 9) PARA CARACTER NUMÉRICO ('0' A '9')
	MOV 	R9, LCD_CIMA				; PORTO DA LINHA DE CIMA DO LCD
	MOVB 	[R9], R2					; ESCREVE O NUMERO DO SENSOR NO LCD DE CIMA

FIM_SENSORES:

	POP 	R9
	POP	    R7
	POP     R6
	POP 	R3
    POP 	R2
    POP 	R1
    
	RET

	
	
	
	
	
;================ PASSAGEM_NIVEL ======================
; ARGUMENTOS: R7 NÚMERO DO SENSOR
; RETORNA: NADA
; DESCRIcÃO: FAZ COM QUE O CICLO DA INTERRUPcÃO 1 
;			 FIQUE ATIVA SE O SENSOR FOR O 8 E DESATIVA
;			 O CICLO SE O SENSOR FOR O 9
;======================================================


	
SENSOR_8:

	PUSH R3
	PUSH R4
	PUSH R5
	
	MOV R3, ESTADO_PASSAGEM_NV ;ENDEREcO DE MEMORIA DO ESTADO DA PASSAGEM DE NIVEL
							   ; USADO NAS ROTINAS: SENSOR8 E SENSOR9
							   ; R2 É TAMBEM USADO, E INDICA O No DO SENSOR
							   
	MOV R5, SENSOR8
	CMP	R7, R5	               ;VERIFICA SE O SENSOR É O 8 
	JNZ SENSOR_9
	
	MOV R4, PN_UM
	MOV [R3], R4	           ;FAZ COM QUE SE POSSA FAZER ENABLE DA INTERRUPcAO
	JMP TESTA_INT1
	
SENSOR_9:
	
	MOV R5, SENSOR9
	CMP R7, R5	               ;VERIFICA SE O SENSOR É O 9
	JNZ TESTA_INT1
	
	MOV R4, PN_ZERO
	MOV [R3], R4	           ; FAZ COM QUE A INTERRUPcAO PARE DE FUNCIONAR

	
TESTA_INT1:

	MOV  R3, ESTADO_PASSAGEM_NV
	MOV R4, [R3]	           ; OBTEM VALOR DA VARIAVEL QUE DETERMINA SE A INTERRUPcAO É FEITA OU NAO
	CMP R4, 0
	JZ FIM_SENSOR_89
	
	MOV R4, 0
	MOV [R3], R4
	CALL MUDANCA_COR_PN
	
FIM_SENSOR_89:
	POP R5
	POP R4
	POP R3	

	RET
	
	
	
	
	
	
;==================================== MUDANCA_COR_PN ======================================
; ARGUMENTOS: NENHUNS
; RETORNA: NADA
; DESCRIcÃO: VERIFICA SE FOI PERMITIDA A MUDANcA DE COR. SE NÃO FOR, RETORNA PARA O CICLO 
;			 PRINCIPAL. EXECUTA A MUDANcA DE COR APENAS UMA VEZ POR CICLO DO REAL TIME CLOCK
;==========================================================================================
	
	
MUDANCA_COR_PN:

	PUSH R1
	PUSH R2
	PUSH R4
	PUSH R5
	PUSH R6
	PUSH R7
	PUSH R8
	PUSH R9
	
	MOV R5, MUDA_COR	        ;ENDERECO DA VARIAVEL PARA PERMITIR A MUDANCA DE COR
	MOV R6, [R5]
	MOV R8, ESTADO_PASSAGEM_NV	;ENDEREcO DA VARIAVEL QUE INDICA O ESTADO DA PASSAGEM DE NIVEL
	MOV R9, [R8]
	
	CMP R6, MC_0	            ;SE NAO HOUVER INTERRUPcAO, NAO HA MUDANCA DE COR
	JZ NAO_HA_MUDANCA_COR
	CMP R9, PN_ZERO	            ;SE O COMBOIO NAO ESTIVER ENTRE OS SENSORES 8 E 9, A ROTINA NAO É EFETUADA
	JZ DOIS_CINZA
	 
	PUSH R5
	PUSH R4
	PUSH R3
	
	MOV R3, SEM_CINZENTO        ;ARGUMENTO
	MOV R4, 8					;No DO SEMAFORO (ARGUMENTO)
	MOV R5, 9					;No DO SEMAFORO (ARGUMENTO)
	CALL TROCA					;TROCA COR DO SEMAFORO 8
	MOV R4, R5
	CALL TROCA					;TROCA COR DO SEMAFORO 9
	
	POP R3
	POP R4
	POP R5
	JMP NAO_HA_MUDANCA_COR
	
DOIS_CINZA:

	MOV R1, E_CINZA	            ;ENDEREcO DE MEMORIA DA VARIAVEL E_CINZA
	MOV R2, [R1]		        ;VALOR DA VARIAVEL
	CMP R2, TRUE
	JZ NAO_HA_MUDANCA_COR	    ;SE NAO HOUVER COMBOIOS NA PASSAGEM DE NIVEL É POSTO OS SEMAFOROS DA PASSAGEM DE NIVEL A CINZA
	MOV R2, TRUE
	MOV [R1], R2	            ;ACTUALIZACAO DAS VARIAVEIS
	CALL POE_CINZA
	 	 
NAO_HA_MUDANCA_COR:
	 
	MOV R6, MC_0
	MOV [R5], R6	            ;ATUALIZA ESTADO, PARA NAO VOLTAR A MUDAR DE COR ATE A PROXIMA INTERRUPcAO 
	MOV R9, PN_ZERO
	MOV [R8], R9	            ;ACTUALIZA ESTADO PARA DESATIVAR O RTC NO RESTANTE DO PERCURSO
	
	POP R9
	POP R8
	POP R7
	POP R6
	POP R5
	POP R4
	POP R2
	POP R1
	
	RET	
					
;========================== REPOE_VARIAVEIS_TROCOS =======================================
; ARGUMENTOS: VARIAVEL NA MEMORIA NO ENDEREcO DA TABELA "TROCO_C1" E "TROCO_C0"
; RETORNA: VARIAVEL NA MEMORIA NO ENDEREcO DA TABELA "TROCOS"
; DESCRIcAO: MUDA AS VARIAVEIS DA MEMORIA COM OS ARGUEMNTOS PARA A ROTINA SENSORES
;			 SO É ATIVADA QUANDO É ACIONADO UM SENSOR					
;=========================================================================================

ACT_VAR_TROCOS:

	PUSH 	R9
	PUSH 	R8
	PUSH 	R7
	PUSH    R6
	PUSH 	R5
	PUSH 	R4
	PUSH 	R2
	PUSH 	R1
	
	MOV R1, HA_ACT		;ENDEREcO DE MEMORIA DO PORTO DOS SENSORES
	MOV R2, [R1]
	CMP R2, FALSE		;SE NAO HOUVEREM EVENTOS A ROTINA NAO É EFETUADA
	JZ FIM_ACT_TROCOS
	
	MOV R2, FALSE	    ;ACTUALIZA FLAG
	MOV [R1], R2
	
	MOV R9, TROCOS		;ENDEREcO DE MEMORIA DA TABELA DOS TROCOS
	MOV R8, TROCO_C0	;ENDEREcO DE MEMORIA DO TROCO ATUAL DO COMBOIO 0
	MOV R7, TROCO_C1	;ENDEREcO DE MEMORIA DO TROCO ATUAL DO COMBOIO 1
	MOV R3, OCUPADO		;ESTADO DO TROCO (OCUPADO)
	MOV R2, DESOCUPADO	;ESTADO DO TROCO (DESOCUPADO)
	MOV R1, 0	        ;INICIALIZACAO DO CONTADOR
	
	
	
CICLO_ACT_TROCOS:	    ;COLOCA TODOS OS TROCOS A "DESCOUPADO"
	
	MOV R6, 8           ;NUMERO TOTAL DE TROCOS É 8 (DE 0 A 7)
	CMP R2, R6
	JZ ACT_TAB_TROCOS
	
	ADD R9, R1		    ;CONTADOR
	MOV R5, [R9]	    ;VALOR DA TABELA DO TROCO CORRESPONDENTE AO VALOR DE R2 (NUMERO DO TROCO/SENSOR)
	CMP R5, OCUPADO
	JNZ NOVA_ITER_CICLO_ACT_TROCOS
	
	MOV [R9], R2	    ;ACTUALIZA VALOR DO TROCO
	
NOVA_ITER_CICLO_ACT_TROCOS:
	
	ADD R2,1	        ;CONTADOR INCREMENTADO
	JMP	CICLO_ACT_TROCOS
	
ACT_TAB_TROCOS:
	
	MOV R4, [R8]	    ;VALOR DA VARIAVEL QUE INDICA O TROCO ATUAL DO COMBOIO 0
	MOV R5, [R7]	    ;VALOR DA VARIAVEL QUE INDICA O TROCO ATUAL DO COMBOIO 1
	
	CALL TROCA_SEMAFORO
	
	MOV R9, TROCOS	    ;ENDEREcO DE MEMORIA DA TABELA DOS TROCOS
	ADD R9, R4
	MOV [R9], R3	    ;COLOCA ESSE TROCO OCUAPDO
	
	MOV R9, TROCOS	    ;ENDEREcO DE MEMORIA DA TABELA DOS TROCOS
	ADD R9, R5
	MOV [R9], R3	    ;COLOCA ESSE TROCO OCUPADO
	
FIM_ACT_TROCOS:
	
	POP	 	R1
	POP 	R2
	POP		R4
	POP 	R5
	POP     R6
	POP 	R7
	POP 	R8
	POP 	R9
		
	RET
		

		
		
		
					;=======================================;
					;			   INTERRUPCOES	     		;
					;=======================================;
		
		
		
		
		
		
;======================================= ROT 0 =================================================
; ARGUMENTOS: ATIVAcAO DE UM SENSOR
; RETORNA: 	VARIAVEL NA MEMORIA NO ENDEREcO DO TROCO DO COMBOIO QUE PASSOU NO SENSOR
; DESCRIcAO: MUDA VARIAVEL NA MEMORIA PARA PERMITIR A INICIALIZACAO DA ROTINA "ACT_VAR_TROCOS"
;===============================================================================================
	
ROT0: 

     PUSH R1
     PUSH R2
     PUSH R9
	 
	 MOV R9, HA_ACT
	 MOV R1, TRUE
	 MOV [R9], R1
	 
	 MOV	R9, SENSOR_INFO		; PORTO DOS SENSORES (INFORMAcÃO)
	 MOVB	R1, [R9]		    ; LÊ 1o BYTE (INFORMAcÃO SOBRE O COMBOIO QUE PASSOU) - IGNORA
	 MOVB	R2, [R9]		    ; LÊ 2o BYTE (NÚMERO DO SENSOR)
	 BIT 	R1, 1		        ;BIT DO NUMERO DO COMBOIO (INDICA QUAL O COMBOIO)
	 JZ C0
	 
C1:
	 
     MOV  R9, TROCO_C1          ; COLOCA NA VARIAVEL O TROCO QUE O COMBOIO 1 PASSOU
     MOV  [R9], R2
	 JMP FIM_ROT0
	 
C0:

	MOV R9, TROCO_C0		    ; COLOCA NA VARIAVEL O TROCO QUE O COMBOIO 0 PASSOU
	MOV [R9], R2
	
FIM_ROT0:	
     POP  R9
     POP  R2
     POP  R1
	
	RFE
					
;================================= ROT1 ===================================================
; ARGUMENTOS: NENHUNS
; RETORNA: VARIAVEL NA MEMORIA NO ENDEREcO DA TABELA "MUDA_COR"
; DESCRIcÃO: PERMITE A TROCA DE CORES DA PASSAGEM DE NÍVEL.
;==========================================================================================

ROT1:
	
	PUSH R3
	PUSH R4
	
	MOV R3, MUDA_COR
	MOV R4, MC_1			
	MOV [R3], R4			;ACTUALIZA VARIAVEL NO ENDEREcO MUDA_COR PARA MC_1 (=1)
	
	POP R4
	POP R3
	
	RFE
	
	
	
	
	
				;======================================;
				;			ROTINAS AUXILIARES         ;
				;======================================;
	
	
	
;============================= TROCA_SEMAFORO ================================
; ARGUMENTOS: R4 E R5 NUMERO DOS TROCOS ATUAIS DO COMBOIO 0 E 1 RESPETIVAMENTE
;			  R3 COR DOS SEMAFOROS POSSIVEIS (VERDE OU CINZA)
; RETORNA: NADA
; DESCRICAO: MUDA A COR DOS SEMAFOROS TENDO EM CONTA A SUA OCUPAcAO
;=============================================================================

TROCA_SEMAFORO:

	PUSH R1
	PUSH R2
	PUSH R3
	PUSH R4
	PUSH R5
	PUSH R6
	PUSH R7
	
	MOV R1, SEMAFOROS	     ;ENDERECO DE MEMORIA DOS SEMAFOROS
	MOV R2, CORES_SEMAFOROS  ;ENDERECO DE MEMORIA DA TABELA COM A COR DOS SEMAFOROS
	MOV R3, SEM_VERDE
	
	CALL TROCA
	MOV R4, R5	             ;MUDA O REGISTO DO ARGUMENTO PARA MUDAR O SEMAFORO AO QUAL SE VAI MUDAR A COR
	CALL TROCA	
		
	POP R7
	POP R6
	POP R5
	POP R4
	POP R3
	POP R2
	POP R1
	RET
	
TROCA:

	ADD R2, R4	        ;ENDERECO DE MEMORIA DA COR DO SEMAFORO DO TROCO OCUPADO
	MOV R6, [R2]        ;COR DO SEMAFORO EM R6
	CMP R6, R3
	JZ MUDA_VERMELHO	;SE A COR ANTERIOR FOR VERMELHO É TROCADO PARA VERDE E VICE-VERSA (EM R7)

MUDA_VERDE_OU_CINZA:

	MOV R7, R3
	JMP TROCA_SEM
	
MUDA_VERMELHO:

	MOV R7, SEM_VERMELHO
	
TROCA_SEM:

	MOV [R2], R7	    ;ACTUALIZA A TABELA DOS SEMAFOROS
	SHL R4, 2 	        ;TRANSFERE O No DO SEMAFORO PARA OS BITS 7 A 2 (NO MESMO REGISTO)
	ADD R4, R7          ;TRANSFERE A COR DO SEMAFORO PARA OS BITS 0 E 1 (NO REGISTO 4)
	MOV [R1], R4	    ;ACTUALIZA EFETIVAMENTE A COR
	
	RET


	
;============================= NUM_BOTAO ===================================================
; ARGUMENTOS: R1 CONTADOR INICIAL DESDE A PRIMEIRA TECLA DO TECLADO EM QUESTAO. NAO DESTRUIDO.
;			 R4 VALOR DO ENDEREcO DE MEMORIA DO TECLADO (ESTADO ANTERIOR). NAO DESTRUIDO.
; RETORNA: R6 NUMERO DA TECLA PREMIDA
; DESCRIcÃO: OBTEM O NÚMERO DO BOTÃO COM BASE NA CADEIA DE DIGITOS BINARIOS "FORNECIDOS" DO
;			 MODULO DOS COMBOIOS.
;===========================================================================================

NUM_BOTAO:	

	PUSH R1
	MOV R4, [R3]
	
	QUAL_TECLA_CICLO:			;ROTINA QUE RETORNA NO R4 A POSICAO DO BIT A 1 DO TECLADO

		BIT R4, 0				;TESTA SE O ÚLTIMO BIT ESTÁ A 1	
		JNZ NUM_BOTAO_FINAL
		ADD R1, 1				;INCREMENTA O CONTADOR DE 1 EM 1, PORQUE A TABELA É COMPOSTA POR STRINGS
		SHR R4, 1				;FAZ SHIFT DO BIT A 1, UMA POSICAO PARA A DIREITA
		JMP QUAL_TECLA_CICLO	

NUM_BOTAO_FINAL:
	
	MOV R4, R1					;GUARDA O NUMERO DA TECLA E USA COMO ARGUMENTO NA MUDANcA DO SEMAFORO
	POP R1
	
	RET

	
	
;======================= POE_CINZA ===========================
; ARGUMENTOS: NENHUM
; RETORNA: NADA
; DESCRIcAO: POE OS SEMAFOROS DA PASSAGEM DE NIVEL A CINZA
;=============================================================

POE_CINZA:

	PUSH R1
	PUSH R2
	PUSH R8
	PUSH R9

	MOV	R1, SEMAFOROS		;ENDEREcO DE MEMORIA DO PORTO DOS SEMAFOROS
	MOV R2, SEM_CINZENTO
	MOV R8, SEM_8
	MOV R9, SEM_9
	
	CALL CINZA
	MOV R9, R8
	CALL CINZA
	
	POP R9
	POP R8
	POP R2
	POP R1
	
	RET
	
CINZA:
	
	SHL R8, 2	 		   ;TRANSFERE O NUMERO DO SEMAFORO NOS BITS 7 A 2
	ADD R8, R2	           ;"ADICIONA" A COR, OU SEJA, COLOCA A COR NOS BITS 0 E 1
	MOV [R1], R8           ;ACTUALIZA A COR EFETIVAMENTE
	
	RET